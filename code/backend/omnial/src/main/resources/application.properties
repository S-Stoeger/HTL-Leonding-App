quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

quarkus.package.type=uber-jar
quarkus.http.host = 0.0.0.0
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=demo
%prod.quarkus.datasource.password=demo
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/demo
#quarkus.datasource.reactive.url = vertx-reactive:postgresql://localhost:5432/mydatabase

quarkus.datasource.username=demo
quarkus.datasource.password=demo
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/demo

%dev.quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation.halt-on-error=false
quarkus.hibernate-orm.sql-load-script=db/import.sql

quarkus.datasource.devservices.enabled=true
quarkus.hibernate-orm.log.sql=true
quarkus.http.access-log.enabled=true

### Docker image build settings
quarkus.container-image.build=false
# set this as an evivronment variable in mvn command: -Dquarkus.container-image.group=$GITHUB_USER
quarkus.container-image.name=webpack-demo
quarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-17-runtime:1.14



//keycloak

mp.jwt.verify.publickey.location=publicKey.pem 
mp.jwt.verify.issuer=https://htlraumreservierng.hopto.org/issuer 

quarkus.native.resources.includes=publicKey.pem 
security-jwt-quickstart/src/main/resources/publicKey.pem


quarkus.oidc.auth-server-url=http://localhost:8000/realms/omnial
quarkus.oidc.client-id=backend
quarkus.oidc.credentials.secret=3v9Tk2oGOt76xFfC2UR33aFRa86P6zZY
quarkus.oidc.token.lifespan=3600
quarkus.http.auth.permission.roles-allowed=user,admin
quarkus.oidc.authentication.user-info-required=true
